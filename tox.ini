[tox]
tox_min_version = 4.4.0
requires =
    tox-uv>=1.11.3
    uv>=0.4.12
labels =
    test-open-source = py3{9,10,11,12,13}-test-open-source
    test-proprietary = py3{9,10,11,12,13}-test-proprietary
env_list =
    pre-commit
    BOM
    py3{9,10,11,12,13}-test-{open-source,proprietary}

[testenv]
constrain_package_deps = true
use_frozen_constraints = True

[testenv:py3{9,10,11,12,13}-test-proprietary]
description = test the project under python {base_python}
skip_install = true
depends = pre-commit
commands_pre =
    - gh repo delete --yes whiteprints-tests/test-gh-{on_platform}-{envname}
commands =
    uvx \
        --with whiteprints-template-context \
        --python {env_python} \
        copier copy \
        --trust --force https://github.com/whiteprints/template-python.git {env_tmp_dir} \
        --data project_name="test gh {on_platform} {envname}" \
        --data author="Romain Brault" \
        --data author_email="mail@romainbrault.com" \
        --data organisation="whiteprints-tests" \
        --data organisation_email="mail@romainbrault.com" \
        --data code_license_id="" \
        --data resources_license_id="" \
        --data copyright_holder="Romain Brault" \
        --data copyright_holder_email="mail@romainbrault.com" \
        --data line_length="79" \
        --data target_python_version="{base_python}"
    uvx \
        --with whiteprints-template-context \
        --python {env_python} \
        copier copy \
        --trust --force https://github.com/whiteprints/template-rich-click.git {env_tmp_dir}
    uvx \
        --with whiteprints-template-context \
        --python {env_python} \
        copier copy \
        --trust --overwrite --vcs-ref HEAD {tox_root} {env_tmp_dir}
    uvx \
        --with tox-uv \
        --python {env_python} \
        tox run \
        --conf {env_tmp_dir}{/}tox.ini \
        --workdir {env_tmp_dir}{/}.tox \
        --root {env_tmp_dir}
commands_post =
    - gh repo delete --yes whiteprints-tests/test-gh-{on_platform}-{envname}
allowlist_externals =
    gh
pass_env =
    SSH_AUTH_SOCK
    UV_PYTHON_PREFERENCE=only-managed

[testenv:py3{9,10,11,12,13}-test-open-source]
description = test the project under python {base_python}
skip_install = true
depends = pre-commit
commands_pre =
    - gh repo delete --yes whiteprints-tests/test-gh-{on_platform}-{envname}
commands =
    uvx \
        --with whiteprints-template-context \
        --python {env_python} \
        copier copy \
        --trust --force https://github.com/whiteprints/template-python.git {env_tmp_dir} \
        --data project_name="test gh {on_platform} {envname}" \
        --data author="Romain Brault" \
        --data author_email="mail@romainbrault.com" \
        --data organisation="whiteprints-tests" \
        --data organisation_email="mail@romainbrault.com" \
        --data code_license_id="MIT OR Apache-2.0" \
        --data resources_license_id="CC-BY-4.0" \
        --data copyright_holder="Romain Brault" \
        --data copyright_holder_email="mail@romainbrault.com" \
        --data line_length="79" \
        --data target_python_version="{base_python}"
    uvx \
        --with whiteprints-template-context \
        --python {env_python} \
        copier copy \
        --trust --force https://github.com/whiteprints/template-rich-click.git {env_tmp_dir}
    uvx \
        --with whiteprints-template-context \
        --python {env_python} \
        copier copy \
        --trust --overwrite --vcs-ref HEAD {tox_root} {env_tmp_dir}
    uvx \
        --with tox-uv \
        --python {env_python} \
        tox run \
        --conf {env_tmp_dir}{/}tox.ini \
        --workdir {env_tmp_dir}{/}.tox \
        --root {env_tmp_dir}
commands_post =
    - gh repo delete --yes whiteprints-tests/test-gh-{on_platform}-{envname}
allowlist_externals =
    gh
pass_env =
    SSH_AUTH_SOCK
    UV_PYTHON_PREFERENCE=only-managed

[testenv:pre-commit]
description = pre-commit checks and fixes
skip_install = true
commands =
    uvx --with pre-commit-uv \
        pre-commit run --all-files --hook-stage=manual --show-diff-on-failure
set_env =
    PRE_COMMIT_COLOR={tty:always:auto}
    UV_PYTHON_PREFERENCE=only-managed

[testenv:BOM]
description = generate the software bill of materials
skip_install = true
depends =
    py3{9,10,11,12,13}-test
deps =
    reuse
commands =
    mkdir -p BOM{/}
    reuse spdx -o BOM{/}project_licenses.spdx
allowlist_externals =
    mkdir
